stages:
  prepare_data:
    cmd: python scripts/prepare_data.py
    deps:
      - data/raw/
      - scripts/prepare_data.py
    outs:
      - data/processed/

  stages:
  prepare_scenario:
    cmd: python scripts/prepare_scenario.py
    params:
    - simulation_config.yaml:
        - scenario
        - agents
        - simulation
    outs:
    - data/interim/scenario_config.json
    - data/interim/agent_configs.json
    - data/interim/market_data.json

  run_simulation:
    cmd: python scripts/run_simulation.py
    deps:
    - data/interim/scenario_config.json
    - data/interim/agent_configs.json  
    - data/interim/market_data.json
    - multi_agent_economics/
    params:
    - simulation_config.yaml:
        - simulation.rounds
        - simulation.output_frequency
    outs:
    - data/processed/simulation_results.json
    - data/processed/action_logs/
    - data/processed/artifacts/
    - results/simulation_output.csv

  analyze_results:
    cmd: python scripts/analyze_results.py
    deps:
    - data/processed/simulation_results.json
    - data/processed/action_logs/
    outs:
    - results/analysis/
    - results/plots/
    - results/agent_behaviors.json
    metrics:
    - results/analysis/summary.json:
        cache: false

  analyze_results:
    cmd: python scripts/analyze_results.py
    deps:
      - results/simulation_output.csv
      - results/agent_behaviors.json
      - scripts/analyze_results.py
    outs:
      - results/analysis/
    plots:
      - results/plots/economic_indicators.png:
          x: time_step
          y: market_price
      - results/plots/agent_wealth_distribution.png:
          template: histogram
          x: agent_wealth
