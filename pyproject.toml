[tool.poetry]
name = "multi-agent-economics"
version = "0.1.0"
description = "Multi-agent LLM economics simulation"
authors = ["Paolo Bova <paolobova@proton.me>"]
readme = "README.md"
license = "MIT"
repository = "https://github.com/paolobova/multi-agent-economics"
keywords = ["multi-agent", "economics", "simulation", "llm"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

[tool.poetry.dependencies]
python = "^3.12"
# Core AutoGen dependencies
autogen-agentchat = "^0.6.0"
autogen-ext = {extras = ["openai"], version = "^0.6.0"}
# Essential for the project
dvc = "^3.0.0"
pydantic = "^2.0.0"
python-dotenv = "^1.0.0"
# Data science essentials
pandas = "^2.0.0"
numpy = "^1.24.0"
matplotlib = "^3.7.0"
# LLM provider
openai = "^1.0.0"

[tool.poetry.group.dev.dependencies]
# Testing
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
# Code quality
black = "^23.7.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.5.0"
# Documentation
sphinx = "^7.0.0"
sphinx-rtd-theme = "^1.3.0"
myst-parser = "^2.0.0"

[tool.poetry.extras]
# Add these when needed later
# dvc-s3 = ["dvc-s3"]
# anthropic = ["anthropic"]

# [tool.poetry.scripts]
# Add these when CLI modules are created:
# simulate = "multi_agent_economics.cli:main"
# analyze = "multi_agent_economics.analysis.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["multi_agent_economics"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_context = true

[[tool.mypy.overrides]]
module = [
    "autogen_agentchat.*",
    "autogen_ext.*",
    "matplotlib.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests", 
    "unit: marks tests as unit tests",
]

